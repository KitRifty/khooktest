name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        arch: [x86, x86_64]
        include:
          - os: ubuntu-latest
            cc: clang
            cxx: clang++
          - os: windows-latest
            cc: msvc
      fail-fast: false

    name: Test (${{ matrix.os }}, ${{ matrix.cc }}, ${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    steps:
    - name: Linux dependencies
      if: startsWith(runner.os, 'Linux')
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          gcc-multilib g++-multilib libstdc++6 lib32stdc++6 \
          libc6-dev libc6-dev-i386 linux-libc-dev \
          linux-libc-dev:i386 lib32z1-dev ${{ matrix.cc }}

    - uses: actions/checkout@v5
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.13'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install git+https://github.com/alliedmodders/ambuild

    - name: Select compiler
      if: startsWith(runner.os, 'Linux')
      run: |
        echo "CC=${{ matrix.cc }}" >> $GITHUB_ENV
        echo "CXX=${{ matrix.cxx }}" >> $GITHUB_ENV
        ${{ matrix.cc }} --version
        ${{ matrix.cxx }} --version

    - name: Build
      run: |
        mkdir build
        cd build
        python ../configure.py --targets ${{ matrix.arch }}
        ambuild

    - name: Test
      run: |
        python third_party/gtest-parallel/gtest-parallel \
          ./build/package/${{ matrix.arch }}/testrunner \
          --timeout 10